<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sqsq.flow.mapper.FlowTaskMapper">

    <resultMap type="FlowTask" id="FlowTaskResult">
        <result property="id"    column="id"    />
        <result property="flowName"    column="flow_name"    />
        <result property="taskId"    column="task_id"    />
        <result property="userId"    column="user_id"    />
        <result property="nextId"    column="next_id"    />
        <result property="nextRole"    column="next_role"    />
        <result property="node"    column="node"    />
        <result property="status"    column="status"    />
        <result property="data"    column="data"    />
    </resultMap>

    <sql id="selectFlowTaskVo">
        select id, flow_name, task_id, user_id, next_id, next_role, node, status, data from flow_task
    </sql>

    <select id="selectFlowTaskList" parameterType="FlowTask" resultMap="FlowTaskResult">
        <include refid="selectFlowTaskVo"/>
        <where>
            <if test="flowName != null  and flowName != ''"> and flow_name like concat('%', #{flowName}, '%')</if>
            <if test="taskId != null  and taskId != ''"> and task_id = #{taskId}</if>
            <if test="userId != null  and userId != ''"> and user_id = #{userId}</if>
            <if test="nextId != null  and nextId != ''"> and next_id = #{nextId}</if>
            <if test="nextRole != null  and nextRole != ''"> and next_role = #{nextRole}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>

    <select id="selectFlowTaskById" parameterType="Long" resultMap="FlowTaskResult">
        <include refid="selectFlowTaskVo"/>
        where id = #{id}
    </select>

    <select id="selectFlowTaskTodoList" resultMap="FlowTaskResult">
        <include refid="selectFlowTaskVo"/>
        <where>
            <if test="userId != null or (role != null and role != '')">
                user_id != #{userId}
                AND (
                <if test="userId != null">
                    FIND_IN_SET(#{userId}, next_id) > 0
                </if>
                <if test="userId != null and (role != null and role != '')">
                    OR
                </if>
                <if test="role != null and role != ''">
                    <if test="role.indexOf(',') == -1">
                        FIND_IN_SET(#{role}, CONCAT(',', REPLACE(next_role, ',', ','), ',')) > 0
                    </if>
                    <if test="role.indexOf(',') != -1">
                        <foreach collection="role.split(',')" item="r" separator=" OR ">
                            FIND_IN_SET(#{r}, CONCAT(',', REPLACE(next_role, ',', ','), ',')) > 0
                        </foreach>
                    </if>
                </if>
                )
            </if>
            <if test="flow != null and flow != ''">
                AND flow_name = #{flow}
            </if>
        </where>
    </select>

    <insert id="insertFlowTask" parameterType="FlowTask" useGeneratedKeys="true" keyProperty="id">
        insert into flow_task
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="flowName != null and flowName != ''">flow_name,</if>
            <if test="taskId != null and taskId != ''">task_id,</if>
            <if test="userId != null and userId != ''">user_id,</if>
            <if test="nextId != null and nextId != ''">next_id,</if>
            <if test="nextRole != null and nextRole != ''">next_role,</if>
            <if test="node != null and node != ''">node,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="data != null">data,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="flowName != null and flowName != ''">#{flowName},</if>
            <if test="taskId != null and taskId != ''">#{taskId},</if>
            <if test="userId != null and userId != ''">#{userId},</if>
            <if test="nextId != null and nextId != ''">#{nextId},</if>
            <if test="nextRole != null and nextRole != ''">#{nextRole},</if>
            <if test="node != null and node != ''">#{node},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="data != null">#{data},</if>
        </trim>
    </insert>

    <update id="updateFlowTask" parameterType="FlowTask">
        update flow_task
        <trim prefix="SET" suffixOverrides=",">
            <if test="flowName != null and flowName != ''">flow_name = #{flowName},</if>
            <if test="taskId != null and taskId != ''">task_id = #{taskId},</if>
            <if test="userId != null and userId != ''">user_id = #{userId},</if>
            <if test="nextId != null and nextId != ''">next_id = #{nextId},</if>
            <if test="nextRole != null and nextRole != ''">next_role = #{nextRole},</if>
            <if test="node != null and node != ''">node = #{node},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="data != null">data = #{data},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteFlowTaskById" parameterType="Long">
        delete from flow_task where id = #{id}
    </delete>

    <delete id="deleteFlowTaskByIds" parameterType="String">
        delete from flow_task where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>